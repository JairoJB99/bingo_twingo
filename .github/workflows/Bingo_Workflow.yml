name: main_workflow
on: 
 push: 
  branches:
   - githubActions_improvement
jobs:
  syntax_check_job:
    name: syntax_check_job
    runs-on: ubuntu-latest
    steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: LinterExecution
       uses: github/super-linter@v3
       env:
          DEFAULT_BRANCH: githubActions_improvement
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: /
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.js
          VALIDATE_JAVASCRIPT_ES: true
          SYNTAX_STATUS: ${{ false }}
    outputs:  
        output: ${{ job.status }}
  
  test_execution_job:
    name: test_execution_job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        env: 
          EXECUTION_STATUS: ${{ false }}
        uses: actions/checkout@v2
      - name: Ejecutar tests
        run: |
          npm i
          npm run test
    outputs:  
        output: ${{ job.status }}      
  
  build_statics_job:
    name: build_statics_job
    runs-on: ubuntu-latest
    needs: [syntax_check_job, test_execution_job]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: |
          npm i
          npm run buildDev
      - name: artifact upload
        env: 
          BUILD_STATUS: ${{ false }}
        uses: actions/upload-artifact@v2
        with: 
          name: build
          path: ./dist
    outputs:  
        output: ${{ job.status }}      
  deploy_job:
    name: deploy_job
    runs-on: ubuntu-latest
    needs: build_statics_job
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with: 
        name: build
    - name: Deploy Artifact
      env: 
        DEPLOY_STATUS: ${{ false }}
      uses: dswistowski/surge-sh-action@v1
      with:
        domain: deployBingoGHActions.surge.sh
        project: .
        login: ${{secrets.LOGIN }}
        token: ${{secrets.TOKEN }}
    outputs:  
        output: ${{ job.status }}    
  notification_job:
    name: notification_job
    needs: [syntax_check_job, test_execution_job, build_statics_job, deploy_job]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Send email
        uses: ./.github/actions/send_message
        with:
          author: ${{ secrets.AUTHOR }}
          password: ${{ secrets.PASSWORD }}
          recipients_mail: ${{ secrets.RECIPIENTS_MAIL }}
          branch: ${{ github.ref }}
          workflow: ${{ github.workflow }}
          SYNTAX_STATUS: ${{needs.syntax_check_job.outputs.output}}
          EXECUTION_STATUS: ${{needs.test_execution_job.outputs.output}}
          BUILD_STATUS: ${{needs.build_statics_job.outputs.output}}
          DEPLOY_STATUS: ${{needs.deploy_job.outputs.output}}
  update_readme_job:
    name: Set Date at README
    runs-on: ubuntu-latest
    needs: deploy_job
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set Date README.md
        run: |
          sed -i '$d' README.md
          echo -e "\n - Última versión desplegada el día: `date`" >> README.md
      - name: Save Date README
        run: |
          git config user.name ${{ secrets.USERNAME_GIT }}
          git config user.email ${{ secrets.EMAIL_GIT }}
          git add . 
          git commit -m "Update README Date"
          git push origin githubActions_improvement